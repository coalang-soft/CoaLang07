[ 1 ; 0 ] ! : [ TRUE ; FALSE ] ;

[ ( ; ) ; | s ; | [ ; | ] ] : [ BRACKET_OPEN ; BRACKET_CLOSE ; SPACE ; BRACE_OPEN ; BRACE_CLOSE ] ;

[ [ x \ ( x range ) \ 1 ] $ [ x ] ] :! [ reverseRange ] ;
[ [ a ? ( a length reverseRange ) ] $$ [ a ] ] :! [ reverse ] ;

[
	[
		[
			[ BRACE_OPEN strConcat SPACE ] $ [ x ] arg / strConcat strConcat functionContent
			strConcat (
				[ SPACE strConcat BRACE_CLOSE strConcat SPACE strConcat [ $ ] strConcat SPACE strConcat BRACE_OPEN strConcat SPACE strConcat x strConcat SPACE strConcat BRACE_CLOSE ]
				$ [ x ]	( arg reverse ) / strConcat
			)
		] $$ [ arg ]
	] $ [ functionContent ]
] :! [ withCode ] ;
[ [ [ withCode functionContent arg ! ] $$ [ arg ] ] $ [ functionContent ] ] :! [ with ] ;

[ object method property ? argcount ] withCode [ property ; argcount ; object ] :! [ fromMethod ] ;
[ fromMethod property argcount ] withCode [ argcount ; property ] :! [ fromMethods ] ;
[ [ fromMethod ] strConcat SPACE strConcat BRACE_OPEN strConcat SPACE strConcat name strConcat SPACE strConcat BRACE_CLOSE strConcat SPACE strConcat argcount ] withCode [ name ; argcount ] :! [ fromMethodCode ] ;

[ value : name ] withCode [ name ; value ] :! [ :: ] ;

[ toUpperCase ; toLowerCase ] : [ USED_METHODS ] ;
fromMethodCode USED_METHODS 0 :! USED_METHODS ;