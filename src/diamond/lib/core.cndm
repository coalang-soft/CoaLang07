[ 1 ; 0 ; strConcat ] :! [ TRUE ; FALSE ; ,, ] ;
[ ( ; ) ; | s ; | [ ; | ] ] : [ BRACKET_OPEN ; BRACKET_CLOSE ; SPACE ; BRACE_OPEN ; BRACE_CLOSE ] ;

[ [ x \ ( x range ) \ 1 ] $ [ x ] ] :! [ reverseRange ] ;
[ [ a ? ( a length reverseRange ) ] $$ [ a ] ] :! [ reverse ] ;

[
	[ [
		[
			[ BRACE_OPEN ,, SPACE ] $ [ x ] arg / ,, ,, functionContent
			,, (
				[ SPACE ,, BRACE_CLOSE ,, SPACE ,, functionBuilder ,, SPACE ,, BRACE_OPEN ,, SPACE ,, x ,, SPACE ,, BRACE_CLOSE ]
				$ [ x ]	( arg reverse ) / ,,
			)
		] $$ [ arg ]
	] $ [ functionContent ] ] $ [ functionBuilder ]
] :! [ withCode ] ;

[ withCode [ $ ] ; withCode [ $$ ] ; withCode [ ' ] ] :! [ withSingleCode ; withArrayCode ; withMacroCode ] ;
[ [ [ withSingleCode code args ! ] $$ [ args ] ] $ [ code ] ] :! [ withSingle ] ;
[ [ [ withArrayCode code args ! ] $$ [ args ] ] $ [ code ] ] :! [ withArray ] ;
[ [ [ withMacroCode code args ! ] $$ [ args ] ] $ [ code ] ] :! [ withMacro ] ;

[ [ [ ,, array separator / ,, ] $ [ separator ] ] $$ [ array ] ] :! [ join ] ;
[ BRACE_OPEN , value , BRACE_CLOSE , [ :! ] , BRACE_OPEN , name , BRACE_CLOSE join SPACE ] withMacroCode [ name ; equals ; value ] :! [ let ] ;
